openapi: 3.0.3
info:
  title: Swagger Flow Magic - OpenAPI 3.0
  description: |-
    This API documentation is for Flow Magic Application
    Objectives:
      1. Design an API that allows  users to login and see all of user's registered applications.
      2. Design an API that allows users to obtain screen flow and change screen flow for the regetered applications.
  contact:
    email: dherek@oregonstate.edu
  version: .0.0
servers:
  - url: https://www.localserver:8000/flowMagic/
tags:
  - name: user
    description: Operations about user
  - name: applications
    description: Applications registered by the user
  - name: screenFlow
    description: Application's screen flow

paths:
  /auth:
    get:
      tags:
        - user
      summary: Initiate OAuth 2.0 Authorization Code flow with Google
      description: Redirects user to Google's sign-in page.
      operationId: initiateOAuthFlow
      responses:
        "302":
          description: Redirect to Google's sign-in page
        "401":
          description: Unauthorized or Denied by user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"
        "500":
          description: Internal Server Error

  /auth/google/callback:
    get:
      tags:
        - user
      summary: Google OAuth 2.0 callback endpoint
      description: Callback endpoint for Google OAuth 2.0 authentication. This will set the authentication cookie and redirect the user.
      responses:
        "302":
          description: Successfully authenticated. The user is redirected to the dashboard or another appropriate page.
          headers:
            Set-Cookie:
              description: The authentication cookie being set.
              schema:
                type: string
        "401":
          description: Authentication failed. The user is redirected to the login page with an error message.
        "500":
          description: Internal server error. The user is redirected to an error page.

  /logout:
    get:
      tags:
        - user
      summary: Log out current logged in user session and clear cookies
      description: Logout the current session
      operationId: logoutUser
      responses:
        "200":
          description: User logged out successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid session or token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"

  /applications:
    get:
      tags:
        - applications
      summary: List all the applications of the user
      description: Returns a list of applications
      operationId: List out all the applications of the login user
      parameters:
        - name: companyName
          in: query
          description: The name of the company for which the user is attempting to log in.
          required: true
          explode: true
          schema:
            type: string
            items:
              type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Applications"
        "400":
          description: Invalid application Id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"
        "401":
          description: Invalid bearer token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"
        "500":
          description: Operation Failed. Please try after some time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"
      security:
        - oAuth2: [email]

  /applications/{id}/screenFlow:
    get:
      tags:
        - screenFlow
      summary: View Particular application's screen flow
      description: Get the Application's screen flow
      operationId: getScreenFlowByApplicationId
      parameters:
        - name: id
          in: path
          description: Application ID which is uniquely identifies registered application
          required: true
          explode: true
          schema:
            type: string
            items:
              type: string
      security:
        - oAuth2: [email]
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScreenFlow"
        "404":
          description: Application not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"
        "401":
          description: Invalid bearer token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"
        "500":
          description: Operation Failed. Please try after some time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"

    put:
      tags:
        - screenFlow
      summary: Modify the application's existing screen flow
      description: Modify the screen flow of selected application
      operationId: modifyScreenFlowByApplicationId
      parameters:
        - name: id
          in: path
          description: Application ID which is uniquely identifies registered application
          required: true
          schema:
            type: string
            example: application123
      requestBody:
        description: Update an existing screen flow
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreenFlow"
      responses:
        "200":
          description: Screen flow modified successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Invalid bearer token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"
        "500":
          description: Operation Failed. Please try after some time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailureResponse"
      security:
        - oAuth2: [email]

components:
  schemas:
    ScreenFlow:
      type: object
      properties:
        id:
          type: string
          example: 1234667812345678
        screenFlow:
          type: array
          items:
            $ref: "#/components/schemas/Screen"

    Screen:
      type: object
      properties:
        screenName:
          type: string
          format: string
          example: "Home"
        portName:
          type: string
          format: string
          example: "Home.Login"
        destinationView:
          type: object
          format: string
          example: Login

    Applications:
      type: object
      properties:
        id:
          type: integer
          format: UUID
          example: 66ceb688-a2b3-11ed-a8fc-0242ac120002
        applicationName:
          type: string
          example: "SocialBook"

    UserLogin:
      type: object
      properties:
        username:
          type: string
          example: userEmailId@gmail.com
        password:
          type: string
          example: "12345"
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c

    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: "SUCCESS"
        meesage:
          type: string
          example: Custom message about the operation

    FailureResponse:
      type: object
      properties:
        status:
          type: string
          example: "FAILURE"
        meesage:
          type: string
          example: Error message about the operation
  securitySchemes:
    oAuth2:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        implicit: # <---- OAuth flow(authorizationCode, implicit, password or clientCredentials)
          authorizationUrl: https://api.example.com/oauth2/authorize
          scopes:
            email: User's email address
